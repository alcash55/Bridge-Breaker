///////////////////////// LCD /////////////////////////
#include <U8g2lib.h>
#include <avr/pgmspace.h>
U8G2_ST7920_128X64_F_SW_SPI u8g2(U8G2_R0, /* clock=*/ 7, /* data=*/ 9, /* CS=*/ 8, /* reset=*/ 30);


///////////////////////// Bitmaps /////////////////////////
#define splash_width  128
#define splash_height 64
static const unsigned char splash_bits[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x81, 0x7f, 0x00, 0x03, 0x3f, 0x00, 0xf0, 0x03, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x03, 0x43, 0x80, 0x83, 0xc3, 0x00, 0x1c, 0x03, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0x03, 0xc3, 0x00, 0x03, 0x83, 0x01, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x03, 0x63, 0x00, 0x03, 0x83, 0x03, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x63, 0x00, 0x03, 0x03, 0x03, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xd0, 0x00, 0x1b, 0x00, 0x03, 0x03, 0x83, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x0f, 0x00, 0x03, 0x03, 0x83, 0x01, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x03, 0x3b, 0x00, 0x03, 0x03, 0x83, 0x01, 0x80, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x10, 0x06, 0x63, 0x00, 0x03, 0x03, 0x83, 0x01, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x06, 0xc3, 0x01, 0x03, 0x03, 0x83, 0x01, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x06, 0x03, 0x03, 0x03, 0x83, 0x01, 0x01, 0x81, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x90, 0x03, 0x03, 0x0e, 0x03, 0x83, 0x01, 0x03, 0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x03, 0x3c, 0x03, 0x63, 0x00, 0x82, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x03, 0xf0, 0x83, 0x1f, 0x00, 0xfc, 0x01, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0xfc, 0x03, 0x80, 0x87, 0x07, 0x00, 0x0c, 0x00, 0xf0, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0xc0, 0x1c, 0x18, 0x02, 0xc0, 0x00, 0x06, 0x00, 0x0c, 0x1c, 0x18, 0x60, 0x08, 0x00, 0x00, 0x00, 0xc0, 0x18, 0x18, 0x06, 0x60, 0x00, 0x0c, 0x00, 0x0c, 0x0e, 0x0c, 0x60, 0x18, 0x00, 0x00,
  0x00, 0x80, 0x18, 0x18, 0x03, 0x20, 0x00, 0x18, 0x00, 0x0c, 0x03, 0x04, 0x60, 0x0c, 0x00, 0x00, 0x00, 0x80, 0x0c, 0x18, 0x03, 0x30, 0x00, 0x38, 0x00, 0x8c, 0x01, 0x06, 0x60, 0x0c, 0x00, 0x00, 0x00, 0x80, 0x06, 0xd8, 0x00, 0x30, 0x00, 0x6c, 0x00, 0xcc, 0x00, 0x06, 0x60, 0x03, 0x00, 0x00,
  0x00, 0x80, 0x0f, 0x78, 0x00, 0xf0, 0x07, 0xc4, 0x00, 0x6c, 0x00, 0xfe, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x80, 0x18, 0xd8, 0x01, 0x30, 0x00, 0x86, 0x01, 0x3c, 0x00, 0x06, 0x60, 0x07, 0x00, 0x00, 0x00, 0x80, 0x30, 0x18, 0x03, 0x30, 0x00, 0x02, 0x03, 0x6c, 0x00, 0x06, 0x60, 0x0c, 0x00, 0x00,
  0x00, 0x80, 0x30, 0x18, 0x0e, 0x30, 0x00, 0xff, 0x07, 0xcc, 0x00, 0x06, 0x60, 0x38, 0x00, 0x00, 0x00, 0x80, 0x30, 0x18, 0x18, 0x30, 0x80, 0x01, 0x0c, 0x8c, 0x03, 0x06, 0x60, 0x60, 0x00, 0x00, 0x00, 0x80, 0x1c, 0x18, 0x70, 0x70, 0x80, 0x00, 0x18, 0x0c, 0x07, 0x0e, 0x60, 0xc0, 0x01, 0x00,
  0x00, 0x80, 0x0f, 0x18, 0xe0, 0x61, 0xc0, 0x00, 0x38, 0x0c, 0x1c, 0x0c, 0x60, 0x80, 0x07, 0x00, 0x00, 0xc0, 0x03, 0x18, 0x80, 0xc7, 0x60, 0x00, 0x70, 0x0c, 0x18, 0x18, 0x60, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x0c, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x10, 0x00, 0xe0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x10, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x73, 0x97, 0x73, 0x00, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x94, 0x50, 0x94, 0xc0, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0x17, 0x53, 0x94, 0x20, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x10, 0x54, 0x94, 0x10, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x93, 0x93, 0x93, 0xf0, 0xe5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#define mainBG_width  128
#define mainBG_height 64
static const unsigned char mainBG_bits[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#define mainStop_width  29
#define mainStop_height 13
static const unsigned char mainStop_bits[] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0xf0, 0x81, 0x0b, 0x00, 0xf0,
  0x41, 0x08, 0x00, 0xf0, 0x41, 0x9c, 0xf7, 0xf0, 0x81, 0x89, 0x94, 0xf0,
  0x01, 0x8a, 0x94, 0xf0, 0x41, 0x8a, 0x94, 0xf0, 0x81, 0x31, 0x73, 0xf0,
  0x01, 0x00, 0x10, 0xf0, 0x01, 0x00, 0x10, 0xf0, 0x01, 0x00, 0x00, 0xf0,
  0xff, 0xff, 0xff, 0xff
};

#define mainStart_width  29
#define mainStart_height 13
static const unsigned char mainStart_bits[] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0xf0, 0x31, 0x00, 0x00, 0xf0,
  0x4d, 0x02, 0x00, 0xf1, 0x05, 0x82, 0x40, 0xf1, 0x09, 0x6f, 0xb1, 0xf7,
  0x31, 0x02, 0x12, 0xf1, 0x41, 0xc2, 0x13, 0xf1, 0xc1, 0x22, 0x12, 0xf1,
  0x45, 0x22, 0x13, 0xf1, 0x39, 0xec, 0x12, 0xf6, 0x01, 0x00, 0x00, 0xf0,
  0xff, 0xff, 0xff, 0xff
};

#define mainCali_width  115
#define mainCali_height 26
static const unsigned char mainCali_bits[] PROGMEM = {
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff,0x03,0x00,0x00,0x00,0x00,0x00,
 0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0x03,0x00,0x00,
 0x00,0x00,0x00,0x00,0xf6,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,
 0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xf6,0xff,0xff,0xff,0xff,
 0xff,0xff,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xf6,0xff,
 0xff,0xff,0xff,0xff,0xff,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,
 0x00,0xf6,0xff,0x00,0x00,0x00,0xe0,0xff,0xfe,0x03,0xe0,0xdf,
 0xc7,0xe7,0x1f,0x00,0xf6,0xff,0x7c,0xf8,0x38,0xe0,0xff,0xfe,
 0x03,0xe0,0xdf,0xe7,0xef,0x1f,0x00,0xf6,0xff,0xfe,0xf8,0x38,
 0xe0,0xff,0xfe,0x03,0x00,0xc7,0xe1,0x0e,0x07,0x00,0xf6,0xff,
 0xee,0xd8,0x38,0xe0,0xff,0xfe,0x03,0x00,0xc7,0xe1,0x0e,0x07,
 0x00,0xf6,0xff,0xee,0xd8,0x38,0xe0,0xff,0xfe,0x03,0x00,0xc7,
 0xe1,0x00,0x07,0x00,0xf6,0xff,0xee,0xdc,0x39,0xe0,0xff,0xfe,
 0x03,0x00,0xc7,0xe7,0x03,0x07,0x00,0xf6,0xff,0x0e,0xdc,0x39,
 0xe0,0xff,0xfe,0x03,0x00,0xc7,0xc7,0x07,0x07,0x00,0xf6,0xff,
 0x0e,0xdc,0x39,0xe0,0xff,0xfe,0x03,0x00,0xc7,0x01,0x0f,0x07,
 0x00,0xf6,0xff,0xee,0x8c,0x39,0xe0,0xff,0xfe,0x03,0x00,0xc7,
 0x01,0x0e,0x07,0x00,0xf6,0xff,0xee,0x8c,0x39,0xe0,0xff,0xfe,
 0x03,0x00,0xc7,0xe1,0x0e,0x07,0x00,0xf6,0xff,0xee,0xfc,0x39,
 0xe0,0xff,0xfe,0x03,0x00,0xc7,0xe1,0x0e,0x07,0x00,0xf6,0xff,
 0xee,0xfe,0x3b,0xee,0xff,0xfe,0x03,0x00,0xc7,0xef,0x0f,0x07,
 0x00,0xf6,0xff,0x7e,0x8e,0xfb,0xee,0xff,0xfe,0x03,0x00,0xc7,
 0xcf,0x07,0x07,0x00,0xf6,0xff,0x3c,0x8e,0xfb,0xee,0xff,0xfe,
 0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xf6,0xff,0x00,0x00,0x00,
 0xe0,0xff,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xf6,0xff,
 0xff,0xff,0xff,0xff,0xff,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,
 0x00,0xf6,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x03,0x00,0x00,
 0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff};

#define mainTest_width  115
#define mainTest_height 26
static const unsigned char mainTest_bits[] PROGMEM = {
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff,0x03,0x00,0x00,0x00,0x00,0x00,
 0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0xfb,0xff,0xff,
 0xff,0xff,0xff,0xff,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 0xfb,0xff,0xff,0xff,0xff,0xff,0xff,0x06,0x00,0x00,0x00,0x00,
 0x00,0x00,0xfe,0xfb,0xff,0xff,0xff,0xff,0xff,0xff,0x06,0x00,
 0x00,0x00,0x00,0x00,0x00,0xfe,0xfb,0x0f,0x00,0x00,0x00,0xc0,
 0xff,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0xfb,0xef,0xdf,
 0xc7,0xe7,0xdf,0xff,0x06,0x00,0x7c,0xf8,0x38,0x00,0x00,0xfe,
 0xfb,0xef,0xdf,0xe7,0xef,0xdf,0xff,0x06,0x00,0xfe,0xf8,0x38,
 0x00,0x00,0xfe,0xfb,0x0f,0xc7,0xe1,0x0e,0xc7,0xff,0x06,0x00,
 0xee,0xd8,0x38,0x00,0x00,0xfe,0xfb,0x0f,0xc7,0xe1,0x0e,0xc7,
 0xff,0x06,0x00,0xee,0xd8,0x38,0x00,0x00,0xfe,0xfb,0x0f,0xc7,
 0xe1,0x00,0xc7,0xff,0x06,0x00,0xee,0xdc,0x39,0x00,0x00,0xfe,
 0xfb,0x0f,0xc7,0xe7,0x03,0xc7,0xff,0x06,0x00,0x0e,0xdc,0x39,
 0x00,0x00,0xfe,0xfb,0x0f,0xc7,0xc7,0x07,0xc7,0xff,0x06,0x00,
 0x0e,0xdc,0x39,0x00,0x00,0xfe,0xfb,0x0f,0xc7,0x01,0x0f,0xc7,
 0xff,0x06,0x00,0xee,0x8c,0x39,0x00,0x00,0xfe,0xfb,0x0f,0xc7,
 0x01,0x0e,0xc7,0xff,0x06,0x00,0xee,0x8c,0x39,0x00,0x00,0xfe,
 0xfb,0x0f,0xc7,0xe1,0x0e,0xc7,0xff,0x06,0x00,0xee,0xfc,0x39,
 0x00,0x00,0xfe,0xfb,0x0f,0xc7,0xe1,0x0e,0xc7,0xff,0x06,0x00,
 0xee,0xfe,0x3b,0x0e,0x00,0xfe,0xfb,0x0f,0xc7,0xef,0x0f,0xc7,
 0xff,0x06,0x00,0x7e,0x8e,0xfb,0x0e,0x00,0xfe,0xfb,0x0f,0xc7,
 0xcf,0x07,0xc7,0xff,0x06,0x00,0x3c,0x8e,0xfb,0x0e,0x00,0xfe,
 0xfb,0x0f,0x00,0x00,0x00,0xc0,0xff,0x06,0x00,0x00,0x00,0x00,
 0x00,0x00,0xfe,0xfb,0xff,0xff,0xff,0xff,0xff,0xff,0x06,0x00,
 0x00,0x00,0x00,0x00,0x00,0xfe,0xfb,0xff,0xff,0xff,0xff,0xff,
 0xff,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0x03,0x00,0x00,
 0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0xff,0xff};

#define sdEnabled_width  7
#define sdEnabled_height 5
static const unsigned char sdEnabled_bits[] PROGMEM = {
  0xb7, 0xd1, 0xd7, 0xd4, 0xb7
};
#define sdDisabled_width  7
#define sdDisabled_height 5
static const unsigned char sdDisabled_bits[] PROGMEM = {
  0x80, 0x80, 0x80, 0x80, 0x80
};

#define usbDisabled_width  11
#define usbDisabled_height 5
static const unsigned char usbDisabled_bits[] PROGMEM = {
  0x00, 0xf8, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0xf8
};
#define usbEnabled_width  11
#define usbEnabled_height 5
static const unsigned char usbEnabled_bits[] PROGMEM = {
  0x70, 0xf8, 0x0b, 0xfa, 0xff, 0xff, 0x12, 0xfa, 0xe0, 0xf8
};

#define testBtn_width  59
#define testBtn_height 26
static const unsigned char testBtn_bits[] PROGMEM = {
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 0xfb,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfb,0xff,0xff,0xff,
 0xff,0xff,0xff,0xfe,0xfb,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,
 0xfb,0x0f,0x00,0x00,0x00,0xc0,0xff,0xfe,0xfb,0xef,0xdf,0xc7,
 0xe7,0xdf,0xff,0xfe,0xfb,0xef,0xdf,0xe7,0xef,0xdf,0xff,0xfe,
 0xfb,0x0f,0xc7,0xe1,0x0e,0xc7,0xff,0xfe,0xfb,0x0f,0xc7,0xe1,
 0x0e,0xc7,0xff,0xfe,0xfb,0x0f,0xc7,0xe1,0x00,0xc7,0xff,0xfe,
 0xfb,0x0f,0xc7,0xe7,0x03,0xc7,0xff,0xfe,0xfb,0x0f,0xc7,0xc7,
 0x07,0xc7,0xff,0xfe,0xfb,0x0f,0xc7,0x01,0x0f,0xc7,0xff,0xfe,
 0xfb,0x0f,0xc7,0x01,0x0e,0xc7,0xff,0xfe,0xfb,0x0f,0xc7,0xe1,
 0x0e,0xc7,0xff,0xfe,0xfb,0x0f,0xc7,0xe1,0x0e,0xc7,0xff,0xfe,
 0xfb,0x0f,0xc7,0xef,0x0f,0xc7,0xff,0xfe,0xfb,0x0f,0xc7,0xcf,
 0x07,0xc7,0xff,0xfe,0xfb,0x0f,0x00,0x00,0x00,0xc0,0xff,0xfe,
 0xfb,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfb,0xff,0xff,0xff,
 0xff,0xff,0xff,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0xff,0xff,0xff,0xff};

#define alert_width  16
#define alert_height 16
static const unsigned char alert_bits[] PROGMEM= {
 0x00,0x00,0x80,0x01,0x40,0x02,0x40,0x02,0x20,0x04,0xa0,0x05,
 0x90,0x09,0x90,0x09,0x88,0x11,0x88,0x11,0x84,0x21,0x04,0x20,
 0x82,0x41,0x82,0x41,0x01,0x80,0xff,0xff};

///////////////////////// Graph-Ops /////////////////////////
//No parameters
//No return
void graphics_start() //Clear LCD and display Splash screen
{
  u8g2.begin();
  u8g2.clearBuffer();
  u8g2.drawXBMP(0, 0, splash_width, splash_height, splash_bits);
  u8g2.sendBuffer();
}

//1 Parameter - boolean
//No return
void graphics_main_indicator(bool test) //Display main view with two inputs, this is unused
{
  if(test)u8g2.drawXBMP(7, 26, mainTest_width, mainTest_height, mainTest_bits);
  else u8g2.drawXBMP(7, 26, mainCali_width, mainCali_height, mainCali_bits);
}

//1 Parameter - boolean
//No return
void graphics_main(bool sd) //Display main view with test button and SD state
{
u8g2.clearBuffer();
  u8g2.drawXBMP(0, 0, mainBG_width, mainBG_height, mainBG_bits);
  u8g2.setFont(u8g2_font_micro_mr);
  u8g2.drawStr(17, 6, "Bridge Breaker 2.0");
  graphics_set_sd_state(sd);
  u8g2.drawXBMP(37, 23, testBtn_width, testBtn_height, testBtn_bits);
  //graphics_main_indicator(test);
  
  u8g2.sendBuffer();
}

//5 Parameters - file number, seconds, force, displacement, bool
//No return
void graphics_test(uint16_t f_num, float seconds, float force, float displacement, bool sd) //Display test view with data that is updated whenever sensors are polled
{
char gfileName[12] = {"BB_0000.txt"};
char gfileSegment[5] = {"0000"};
sprintf(gfileSegment, "%04d", f_num);
    memcpy(gfileName + 3, gfileSegment, 4);
  u8g2.clearBuffer();
  u8g2.drawXBMP(0, 0, mainBG_width, mainBG_height, mainBG_bits);
  u8g2.setFont(u8g2_font_micro_mr); // choose a suitable font
  u8g2.drawStr(17, 6,gfileName); // write something to the internal memory
  u8g2.drawStr(67, 32, "Time Elapsed s");
  u8g2.drawStr(2, 32, "Displacement");
  u8g2.drawStr(2, 60, "Force");
  u8g2.drawFrame(65, 9, 63, 27);
  u8g2.drawFrame(0, 9, 64, 27);
  u8g2.drawFrame(0, 37, 64, 27);
  u8g2.setFont(u8g2_font_chroma48medium8_8n);
  u8g2.setCursor(67, 22);
  u8g2.print(seconds);
  u8g2.setCursor(2, 22);
  u8g2.print(displacement);
  u8g2.setCursor(2, 50);
  u8g2.print(force);
  graphics_set_sd_state(sd);
  u8g2.sendBuffer();
}

//1 Parameter - byte
//No return
void graphics_display_error(byte errorType) //Displays error on LCD, different byte codes for different errors
{
u8g2.clearBuffer();
u8g2.drawXBMP(40,20, alert_width, alert_height, alert_bits);
switch(errorType)
{
case 0x01:
u8g2.drawStr(67, 32, "Unimplimented!");
break;  
case 0x5D:
u8g2.drawStr(67, 32, "SD Error!");
break; 
}
u8g2.sendBuffer();
}

//1 Parameter - boolean
//No return
void graphics_set_sd_state(bool sd_present) //Updates SD notification in top right of screen of 
{
  if (sd_present)
    u8g2.drawXBMP(105, 1, sdEnabled_width, sdEnabled_height, sdEnabled_bits);
  else
    u8g2.drawXBMP(105, 1, sdDisabled_width, sdDisabled_height, sdDisabled_bits);
}
